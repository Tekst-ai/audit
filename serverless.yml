service: retracedApi

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 128
  region: us-east-1

plugins:
  - serverless-offline

functions:
  signup:
    handler: userCreate.default
    events:
      - http:
          path: v1/user/signup
          method: post
          integration: lambda
          cors: true
  login:
    handler: userLogin.default
    events:
      - http:
          path: v1/user/login
          method: post
          integration: lambda
          cors: true
  listProjects:
    handler: listProjects.default
    events:
      - http:
          path: v1/projects
          method: get
          integration: lambda
          cors: true
  createProject:
    handler: createProject.default
    events:
      - http:
          path: v1/project
          method: post
          integration: lambda
          cors: true
  getProject:
    handler: getProject.default
    events:
      - http:
          path: v1/project/{projectId}
          method: get
          integration: lambda
          cors: true
  searchEvents:
    handler: searchEvents.default
    timeout: 12
    events:
      - http:
          path: v1/project/{projectId}/events/search
          method: post
          integration: lambda
          cors: true
  deepSearch:
    handler: deepSearch.default
    events:
      - http:
          path: v1/project/{projectId}/events/search/deep
          method: post
          integration: lambda
          cors: true
  getEventsBulk:
    handler: getEventsBulk.default
    events:
      - http:
          path: v1/project/{projectId}/events/bulk
          method: post
          integration: lambda
          cors: true
  listTeam:
    handler: listTeam.default
    events:
      - http:
          path: v1/project/{projectId}/team
          method: get
          integration: lambda
          cors: true
  createEvent:
    handler: createEvent.default
    events:
      - http:
          path: v1/project/{projectId}/event
          method: post
          integration: lambda
          cors: true
  processEvent:
    handler: processEvent.default
    timeout: 12
    events:
      - sns: '${env:RETRACED_PREFIX}-eventprocessor-${env:RETRACED_SUFFIX}'
  createEnvironment:
    handler: createEnvironment.default
    events:
      - http:
          path: v1/project/{projectId}/environment
          method: post
          integration: lambda
          cors: true
  createApiToken:
    handler: createApiToken.default
    events:
      - http:
          path: v1/project/{projectId}/token
          method: post
          integration: lambda
          cors: true
  viewerSession:
    handler: viewerSession.default
    events:
      - http:
          path: v1/viewersession
          method: post
          integration: lambda
          cors: true
  viewerEvents:
    handler: viewerEvents.default
    events:
      - http:
          path: v1/viewer/{projectId}/events/search
          method: get
          integration: lambda
          cors: true
  viewerGetEventsBulk:
    handler: viewerGetEventsBulk.default
    events:
      - http:
          path: v1/viewer/{projectId}/events/bulk
          method: post
          integration: lambda
          cors: true
  viewerDeepSearch:
    handler: viewerDeepSearch.default
    events:
      - http:
          path: v1/viewer/{projectId}/events/search/deep
          method: post
          integration: lambda
          cors: true
  listObjects:
    handler: listObjects.default
    events: 
      - http:
          path: v1/project/{projectId}/objects
          method: get
          integration: lambda
          cors: true
  listActors:
    handler: listActors.default
    events:
      - http:
          path: v1/project/{projectId}/actors
          method: get
          integration: lambda
          cors: true
  createInvite:
    handler: createInvite.default
    events:
      - http:
          path: v1/project/{projectId}/invite
          method: post
          integration: lambda
          cors: true
  getInvite:
    handler: getInvite.default
    events:
      - http:
          path: v1/invite
          method: get
          integration: lambda
          cors: true
  acceptInvite:
    handler: acceptInvite.default
    events:
      - http:
          path: v1/invite/accept
          method: post
          integration: lambda
          cors: true
  getEvent:
    handler: getEvent.default
    events:
      - http:
          path: v1/project/{projectId}/event/{eventId}
          method: get
          integration: lambda
          cors: true
  listActions:
    handler: listActions.default
    events:
      - http:
          path: v1/project/{projectId}/actions
          method: get
          integration: lambda
          cors: true
  getActor:
    handler: getActor.default
    events:
      - http:
          path: v1/project/{projectId}/actor/{actorId}
          method: get
          integration: lambda
          cors: true
  getAction:
    handler: getAction.default
    events:
      - http:
          path: v1/project/{projectId}/action/{actionId}
          method: get
          integration: lambda
          cors: true
  updateAction:
    handler: updateAction.default
    events:
      - http:
          path: v1/project/{projectId}/action/{actionId}
          method: put
          integration: lambda
          cors: true
  viewerToken:
    handler: viewerToken.default
    events:
      - http:
          path: v1/project/{projectId}/viewertoken
          method: get
          integration: lambda
          cors: true